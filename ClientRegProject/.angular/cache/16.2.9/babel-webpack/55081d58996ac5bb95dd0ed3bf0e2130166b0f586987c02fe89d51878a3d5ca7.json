{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegistrationComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" name can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Length can not be less than 4 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Invalid character \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Email can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Address can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Mobile can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Please enter a valid mobile number (only digits are allowed) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Gender can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Gender can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" password can not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" password should be atleast 8 and max 15 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\nexport class RegistrationComponent {\n  constructor(router) {\n    this.router = router;\n    this.repeatpass = 'none';\n    this.formSubmitted = false; // Add this flag\n    this.login = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(4), Validators.pattern(\"^[a-zA-Z_@]*$\")]),\n      Email: new FormControl('', [Validators.required, Validators.email]),\n      Address: new FormControl('', [Validators.required]),\n      Mobno: new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\n      Gender: new FormControl('', [Validators.required]),\n      pwd: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(15)]),\n      rpwd: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(15)])\n    });\n  }\n  ngOnInit() {}\n  register(data) {\n    this.formSubmitted = true; // Set the flag to true when the form is submitted\n    if (this.login.valid) {\n      if (this.pwd.value === this.rpwd.value) {\n        // this.http.post('http://localhost:3000', data).subscribe(\n        //   (response) => {\n        //     // Handle the successful response\n        //   },\n        //   (error) => {\n        //     // Handle the error\n        //   }\n        // );\n        alert(\"successfully Registered\");\n        this.login.reset();\n        this.router.navigateByUrl('/login');\n      } else {\n        this.repeatpass = 'inline';\n      }\n    } else {\n      // Form is invalid, do not navigate\n      // You can also display a message to inform the user about the validation errors\n      alert(\"Please fill in all required fields correctly before submitting.\");\n    }\n  }\n  get Firstname() {\n    return this.login.get(\"name\");\n  }\n  get Email() {\n    return this.login.get(\"Email\");\n  }\n  get Address() {\n    return this.login.get(\"Address\");\n  }\n  get mobno() {\n    return this.login.get(\"Mobno\");\n  }\n  get gender() {\n    return this.login.get(\"Gender\");\n  }\n  get pwd() {\n    return this.login.get(\"pwd\");\n  }\n  get rpwd() {\n    return this.login.get(\"rpwd\");\n  }\n  static #_ = this.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 67,\n    vars: 16,\n    consts: [[1, \"container\"], [1, \"border\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"header\", \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [\"fs-2\", \"\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [\"for\", \"first-name\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"fname\", \"placeholder\", \"Name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [1, \"col\"], [\"type\", \"email\", \"id\", \"Email\", \"placeholder\", \"Email\", \"formControlName\", \"Email\", 1, \"form-control\"], [\"for\", \"Address\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"Address\", \"id\", \"email\", \"placeholder\", \"Address\", \"formControlName\", \"Address\", 1, \"form-control\"], [\"for\", \"mobile\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"mobno\", \"id\", \"mobno\", \"placeholder\", \"Enter Mob no\", \"formControlName\", \"Mobno\", 1, \"form-control\"], [1, \"col\", \"ps-3\"], [1, \"m-1\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"name\", \"Gender\", \"id\", \"male\", \"value\", \"M\", \"formControlName\", \"Gender\", 1, \"form-check-input\"], [\"for\", \"male\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"Gender\", \"id\", \"fmale\", \"value\", \"F\", \"formControlName\", \"Gender\", 1, \"form-check-input\"], [\"for\", \"Password\", 1, \"form-lable\"], [\"type\", \"password\", \"name\", \"pwd\", \"id\", \"pwd\", \"formControlName\", \"pwd\", \"formControlName\", \"pwd\", 1, \"form-control\"], [\"for\", \"Confirm Password\", 1, \"form-lable\"], [\"type\", \"password\", \"name\", \"rpwd\", \"id\", \"rpwd\", \"formControlName\", \"rpwd\", \"formControlName\", \"rpwd\", 1, \"form-control\"], [1, \"form-text\", \"text-danger\", 3, \"ngStyle\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"], [1, \"form-text\", \"text-danger\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.register(ctx.login.value);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Create a Client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"h3\");\n        i0.ɵɵtext(7, \"Please fill in this form to create a client\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵtemplate(13, RegistrationComponent_div_13_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(14, RegistrationComponent_div_14_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(15, RegistrationComponent_div_15_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 10)(18, \"label\", 7);\n        i0.ɵɵtext(19, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵtemplate(21, RegistrationComponent_div_21_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(22, RegistrationComponent_div_22_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 5)(24, \"div\", 6)(25, \"label\", 12);\n        i0.ɵɵtext(26, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 13);\n        i0.ɵɵtemplate(28, RegistrationComponent_div_28_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 5)(30, \"div\", 6)(31, \"label\", 14);\n        i0.ɵɵtext(32, \"Mobile Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 15);\n        i0.ɵɵtemplate(34, RegistrationComponent_div_34_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(35, RegistrationComponent_div_35_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 16)(37, \"div\", 17);\n        i0.ɵɵtext(38, \"Gender\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 18);\n        i0.ɵɵelement(40, \"input\", 19);\n        i0.ɵɵelementStart(41, \"label\", 20);\n        i0.ɵɵtext(42, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(43, RegistrationComponent_div_43_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 18);\n        i0.ɵɵelement(45, \"input\", 21);\n        i0.ɵɵelementStart(46, \"label\", 20);\n        i0.ɵɵtext(47, \"Female\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(48, RegistrationComponent_div_48_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"div\", 5)(50, \"div\", 10)(51, \"label\", 22);\n        i0.ɵɵtext(52, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"input\", 23);\n        i0.ɵɵtemplate(54, RegistrationComponent_div_54_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(55, RegistrationComponent_div_55_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 10)(57, \"label\", 24);\n        i0.ɵɵtext(58, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"input\", 25);\n        i0.ɵɵelementStart(60, \"div\", 26);\n        i0.ɵɵtext(61, \" repeat password is not matching \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(62, \"div\", 5)(63, \"div\", 27)(64, \"div\", 28)(65, \"button\", 29);\n        i0.ɵɵtext(66, \"Register\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.login);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Firstname.errors == null ? null : ctx.Firstname.errors[\"required\"]) && (ctx.Firstname.touched || ctx.Firstname.dirty || ctx.formSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Firstname.errors == null ? null : ctx.Firstname.errors[\"minlength\"]) && (ctx.Firstname.touched || ctx.Firstname.dirty || ctx.formSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Firstname.errors == null ? null : ctx.Firstname.errors[\"pattern\"]) && (ctx.Firstname.touched || ctx.Firstname.dirty || ctx.formSubmitted));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.touched || ctx.formSubmitted || ctx.Email.dirty));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.touched || ctx.formSubmitted || ctx.Email.dirty));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Address.errors == null ? null : ctx.Address.errors[\"required\"]) && (ctx.Address.touched || ctx.formSubmitted));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.mobno.errors == null ? null : ctx.mobno.errors[\"required\"]) && (ctx.mobno.touched || ctx.formSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.mobno.errors == null ? null : ctx.mobno.errors[\"pattern\"]) && (ctx.mobno.touched || ctx.formSubmitted));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", (ctx.gender.errors == null ? null : ctx.gender.errors[\"required\"]) && (ctx.gender.touched || ctx.formSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.gender.errors == null ? null : ctx.gender.errors[\"required\"]) && (ctx.gender.touched || ctx.formSubmitted));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.pwd.errors == null ? null : ctx.pwd.errors[\"required\"]) && (ctx.pwd.touched || ctx.pwd.dirty || ctx.formSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.pwd.errors == null ? null : ctx.pwd.errors[\"minlength\"]) || (ctx.pwd.errors == null ? null : ctx.pwd.errors[\"maxlength\"]) && (ctx.pwd.touched || ctx.pwd.dirty || ctx.formSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(14, _c0, ctx.repeatpass));\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%]{\\n    height: 100vh;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-color: aliceblue;\\n    width: 100%;\\n    font-weight: 600;\\n    font-family: sans-serif;\\n}\\n\\n\\nform[_ngcontent-%COMP%]{\\n    width: 550px;\\n    padding: 15px;\\n    background-color: rgb(141, 176, 206);\\n    \\n}\\nh1[_ngcontent-%COMP%]{\\n    font-size: 29px;\\n    font-weight: 700;\\n}\\nh3[_ngcontent-%COMP%]{\\n    font-size: 23px;\\n    font-weight: 600;\\n}\\ninput[_ngcontent-%COMP%]{\\n    font-size: medium;\\n    font-weight: bold;\\n}\\n.header[_ngcontent-%COMP%]{\\n    color: blue;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsdUJBQXVCO0FBQzNCOzs7QUFHQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2Isb0NBQW9DOztBQUV4QztBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksV0FBVztBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG4uY29udGFpbmVye1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxufVxyXG5cclxuXHJcbmZvcm17XHJcbiAgICB3aWR0aDogNTUwcHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE0MSwgMTc2LCAyMDYpO1xyXG4gICAgXHJcbn1cclxuaDF7XHJcbiAgICBmb250LXNpemU6IDI5cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcbmgze1xyXG4gICAgZm9udC1zaXplOiAyM3B4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5pbnB1dHtcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLmhlYWRlcntcclxuICAgIGNvbG9yOiBibHVlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistrationComponent","constructor","router","repeatpass","formSubmitted","login","name","required","minLength","pattern","Email","email","Address","Mobno","Gender","pwd","maxLength","rpwd","ngOnInit","register","data","valid","value","alert","reset","navigateByUrl","Firstname","get","mobno","gender","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","RegistrationComponent_div_13_Template","RegistrationComponent_div_14_Template","RegistrationComponent_div_15_Template","RegistrationComponent_div_21_Template","RegistrationComponent_div_22_Template","RegistrationComponent_div_28_Template","RegistrationComponent_div_34_Template","RegistrationComponent_div_35_Template","RegistrationComponent_div_43_Template","RegistrationComponent_div_48_Template","RegistrationComponent_div_54_Template","RegistrationComponent_div_55_Template","ɵɵadvance","ɵɵproperty","errors","touched","dirty","ɵɵpureFunction1","_c0"],"sources":["D:\\clientReg\\ClientRegProject\\src\\app\\registration\\registration.component.ts","D:\\clientReg\\ClientRegProject\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router'; \nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n\n  repeatpass: string = 'none';\n  formSubmitted: boolean = false; // Add this flag\n\n  constructor(private router: Router){\n    \n  }\n  ngOnInit(): void {}\n  data: any;\n  register(data:object){\n    this.formSubmitted = true; // Set the flag to true when the form is submitted\n    if(this.login.valid){\n       \n      if(this.pwd.value === this.rpwd.value){\n        \n          // this.http.post('http://localhost:3000', data).subscribe(\n          //   (response) => {\n          //     // Handle the successful response\n          //   },\n          //   (error) => {\n          //     // Handle the error\n          //   }\n          // );\n        \n        alert(\"successfully Registered\");\n        this.login.reset();\n        this.router.navigateByUrl('/login');\n        \n      }\n      else{\n        this.repeatpass = 'inline'\n      }\n\n    }\n    else {\n      // Form is invalid, do not navigate\n      // You can also display a message to inform the user about the validation errors\n      alert(\"Please fill in all required fields correctly before submitting.\");\n      \n    }\n    \n  \n   \n }\n\n\n \n\n\n  login = new FormGroup({\n  name: new FormControl('',[Validators.required, Validators.minLength(4), Validators.pattern(\"^[a-zA-Z_@]*$\")]),\n  Email: new FormControl('', [Validators.required, Validators.email]),\n  Address: new FormControl('', [Validators.required]),\n  Mobno: new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\n  Gender: new FormControl('',[Validators.required]),\n  pwd: new FormControl('',[Validators.required, Validators.minLength(4), Validators.maxLength(15)]),\n  rpwd: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(15)])\n})\n\n\n\nget Firstname(): FormControl\n{\n  return this.login.get(\"name\") as FormControl;\n}\n\n\nget Email(): FormControl\n{\n  return this.login.get(\"Email\") as FormControl\n}\n\nget Address (): FormControl\n{\n  return this.login.get(\"Address\") as FormControl\n}\n\nget mobno(): FormControl\n{\n  return this.login.get(\"Mobno\") as FormControl\n}\n\nget gender(): FormControl\n{\n  return this.login.get(\"Gender\") as FormControl\n}\n\nget pwd(): FormControl\n{\n  return this.login.get(\"pwd\") as FormControl\n}\n\nget rpwd(): FormControl\n{\n  return this.login.get(\"rpwd\") as FormControl\n}\n\n\n}\n","<div class=\"container\">\n\n    <form [formGroup]=\"login\" (ngSubmit)=\"register(login.value)\" class=\"border\">\n        <div class=\"row g-0\">\n            <div class=\" header col text-center p-2 mb-3  bg-light\">\n                <h1 fs-2>Create a Client</h1>\n                <h3>Please fill in this form to create a client</h3>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col mb-3\">\n\n                <label for=\"first-name\" class=\"form-label\">User Name</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" id=\"fname\" placeholder=\"Name\"\n                    formControlName=\"name\">\n                <div class=\"form-text text-danger\"\n                    *ngIf=\"Firstname.errors?.['required'] && (Firstname.touched || Firstname.dirty || formSubmitted)\">\n                    name can not be empty\n                </div>\n                <div class=\"form-text text-danger\"\n                    *ngIf=\"Firstname.errors?.['minlength'] && (Firstname.touched || Firstname.dirty || formSubmitted)\">\n                    Length can not be less than 4\n                </div>\n                <div class=\"form-text text-danger\"\n                    *ngIf=\"Firstname.errors?.['pattern'] && (Firstname.touched || Firstname.dirty || formSubmitted)\">\n                    Invalid character\n                </div>\n            </div>\n\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <label for=\"first-name\" class=\"form-label\">Email</label>\n                <input type=\"email\" class=\"form-control\" id=\"Email\" placeholder=\"Email\"\n                    formControlName=\"Email\">\n                <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['required'] && (Email.touched || formSubmitted || Email.dirty)\">\n                    Email can not be empty\n                </div>\n                <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['email'] && (Email.touched || formSubmitted || Email.dirty)\">\n                Please enter a valid email address\n                </div>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col mb-3\">\n                <label for=\"Address\" class=\"form-label\">Address</label>\n                <input type=\"text\" class=\"form-control\" name=\"Address\" id=\"email\" placeholder=\"Address\"\n                    formControlName=\"Address\">\n                <div class=\"form-text text-danger\" *ngIf=\"Address.errors?.['required'] && (Address.touched || formSubmitted)\">\n                    Address can not be empty\n                </div>\n            </div>\n\n        </div>\n        <div class=\"row\">\n            <div class=\"col mb-3\">\n                <label for=\"mobile\" class=\"form-label\">Mobile Number</label>\n                <input type=\"text\" class=\"form-control\" name=\"mobno\" id=\"mobno\" placeholder=\"Enter Mob no\"\n                    formControlName=\"Mobno\">\n                <div class=\"form-text text-danger\" *ngIf=\"mobno.errors?.['required'] && (mobno.touched || formSubmitted)\">\n                    Mobile can not be empty\n                </div>\n                <div class=\"form-text text-danger\" *ngIf=\"mobno.errors?.['pattern'] && (mobno.touched || formSubmitted)\">\n                    Please enter a valid mobile number (only digits are allowed)\n                </div>\n            </div>\n            <div class=\"col ps-3\">\n                <div class=\"m-1\">Gender</div>\n                <div class=\"form-check form-check-inline\">\n                    <input type=\"radio\" class=\"form-check-input\" name=\"Gender\" id=\"male\" value=\"M\" formControlName=\"Gender\">\n                    <label for=\"male\" class=\"form-check-label\">Male</label>\n                    <div class=\"form-text text-danger\" *ngIf=\" gender.errors?.['required'] && (gender.touched || formSubmitted)\">\n                        Gender can not be empty\n                    </div>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input type=\"radio\" class=\"form-check-input\" name=\"Gender\" id=\"fmale\" value=\"F\" formControlName=\"Gender\">\n                    <label for=\"male\" class=\"form-check-label\">Female</label>\n                    <div class=\"form-text text-danger\" *ngIf=\"gender.errors?.['required'] && (gender.touched || formSubmitted)\">\n                        Gender can not be empty\n                    </div>\n                </div>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <label for=\"Password\" class=\"form-lable\">Password</label>\n                <input type=\"password\" name=\"pwd\" id=\"pwd\" formControlName=\"pwd\" class=\"form-control\"\n                    formControlName=\"pwd\">\n                <div class=\"form-text text-danger\" *ngIf=\"pwd.errors?.['required'] && (pwd.touched || pwd.dirty || formSubmitted)\">\n                    password can not be empty\n                </div>\n                <div class=\"form-text text-danger\"\n                    *ngIf=\" pwd.errors?.['minlength'] || pwd.errors?.['maxlength'] && (pwd.touched || pwd.dirty || formSubmitted)\">\n                    password should be atleast 8 and max 15 characters long\n                </div>\n\n            </div>\n            <div class=\"col\">\n                <label for=\"Confirm Password\" class=\"form-lable\">Confirm Password</label>\n                <input type=\"password\" name=\"rpwd\" id=\"rpwd\" formControlName=\"rpwd\" class=\"form-control\"\n                    formControlName=\"rpwd\">\n\n                <div class=\"form-text text-danger\" [ngStyle]=\"{'display': repeatpass}\">\n                    repeat password is not matching\n                </div>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-6 offset-3\">\n                <div class=\"d-grid\">\n                    <button type=\"submit\" class=\"btn btn-primary mt-3\" >Register</button>\n                </div>\n            </div>\n        </div>\n    </form>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}